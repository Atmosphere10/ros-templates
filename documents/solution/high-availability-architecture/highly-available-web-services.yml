ROSTemplateFormatVersion: '2015-09-01'
Description:
  en: Highly available web services.
  zh-cn: 高可用及共享存储Web服务。
Parameters:
  Zone1:
    Type: String
    Label:
      en: VSwitch Availability Zone1
      zh-cn: 交换机可用区1
    Description:
      en: Availability zone 1 must be different from Availability zone 2.
      zh-cn: 可用区1要不同与可用区2。
    AssociationProperty: 'ALIYUN::ECS::Instance::ZoneId'
  Zone2:
    Type: String
    Label:
      en: VSwitch Availability Zone2
      zh-cn: 交换机可用区2
    Description:
      en: Availability zone 2 must be different from Availability zone 1.
      zh-cn: 可用区2要不同与可用区1。
    AssociationProperty: 'ALIYUN::ECS::Instance::ZoneId'
  NasZone1:
    Type: String
    Label:
      en: NAS Availability Zone1
      zh-cn: NAS可用区1
    Description:
      en: Availability zone 1 must be different from Availability zone 2.
      zh-cn: 可用区1要不同与可用区2。
    AssociationProperty: 'ALIYUN::ECS::Instance::ZoneId'
  NasZone2:
    Type: String
    Label:
      en: NAS Availability Zone2
      zh-cn: NAS可用区2
    Description:
      en: Availability zone 2 must be different from Availability zone 1.
      zh-cn: 可用区2要不同与可用区1。
    AssociationProperty: 'ALIYUN::ECS::Instance::ZoneId'
  EcsInstanceType1:
    Type: String
    Label:
      en: Instance Type Of Availability Zone1
      zh-cn: 可用区1的实例类型
    AssociationProperty: 'ALIYUN::ECS::Instance::InstanceType'
    AssociationPropertyMetadata:
      InstanceChargeType: PostPaid
      SystemDiskCategory: cloud_essd
      ZoneId: ${Zone1}
  EcsInstanceType2:
    Type: String
    Label:
      en: Instance Type Of Availability Zone2
      zh-cn: 可用区2的实例类型
    AssociationProperty: 'ALIYUN::ECS::Instance::InstanceType'
    AssociationPropertyMetadata:
      InstanceChargeType: PostPaid
      SystemDiskCategory: cloud_essd
      ZoneId: ${Zone2}
  InstancePassword:
    Type: String
    Label:
      en: Instance Password
      zh-cn: 实例密码
    Description:
      en: Server login password, Length 8~30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in).
      zh-cn: 服务器登录密码,长度8~30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）。
    AllowedPattern: '[0-9A-Za-z\_\-\&:;''<>,=%`~!@#\(\)\$\^\*\+\|\{\}\[\]\.\?\/]+$'
    ConstraintDescription:
      en: Length 8~30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in).
      zh-cn: 长度8~30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）。
    MinLength: 8
    MaxLength: 30
    NoEcho: true
    AssociationProperty: ALIYUN::ECS::Instance::Password
  CommonName:
    Type: String
    Default: high-availability
Resources:
  EcsVpc:
    Type: ALIYUN::ECS::VPC
    Properties:
      VpcName:
        Fn::Sub: '${CommonName}_vpc'
      CidrBlock: 192.168.0.0/16
  EcsVSwitch1:
    Type: ALIYUN::ECS::VSwitch
    Properties:
      ZoneId:
        Ref: Zone1
      VpcId:
        Ref: EcsVpc
      VSwitchName:
        Fn::Sub: '${CommonName}_vsw_001'
      CidrBlock: 192.168.1.0/24
  EcsVSwitch2:
    Type: ALIYUN::ECS::VSwitch
    Properties:
      ZoneId:
        Ref: Zone2
      VpcId:
        Ref: EcsVpc
      VSwitchName:
        Fn::Sub: '${CommonName}_vsw_002'
      CidrBlock: 192.168.2.0/24
  EcsVSwitch3:
    Type: ALIYUN::ECS::VSwitch
    Properties:
      ZoneId:
        Ref: NasZone1
      VpcId:
        Ref: EcsVpc
      VSwitchName:
        Fn::Sub: '${CommonName}_vsw_003'
      CidrBlock: 192.168.3.0/24
  EcsVSwitch4:
    Type: ALIYUN::ECS::VSwitch
    Properties:
      ZoneId:
        Ref: NasZone2
      VpcId:
        Ref: EcsVpc
      VSwitchName:
        Fn::Sub: '${CommonName}_vsw_004'
      CidrBlock: 192.168.4.0/24
  EcsSecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      SecurityGroupName:
        Fn::Sub: '${CommonName}_sg'
      VpcId:
        Ref: EcsVpc
      SecurityGroupIngress:
        - PortRange: 80/80
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
        - PortRange: 22/22
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
      SecurityGroupEgress:
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: all
          DestCidrIp: 0.0.0.0/0
          NicType: internet
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: all
          DestCidrIp: 0.0.0.0/0
          NicType: intranet
  EcsInstanceGroup1:
    Type: 'ALIYUN::ECS::InstanceGroup'
    Properties:
      ZoneId:
        Ref: Zone1
      VpcId:
        Ref: EcsVpc
      VSwitchId:
        Ref: EcsVSwitch1
      SecurityGroupId:
        Ref: EcsSecurityGroup
      ImageId: centos_7_6
      IoOptimized: optimized
      SystemDiskCategory: cloud_essd
      SystemDiskSize: 40
      SpotStrategy: SpotAsPriceGo
      MaxAmount: 1
      InstanceType:
        Ref: EcsInstanceType1
      Password:
        Ref: InstancePassword
      InstanceName:
        Fn::Sub: '${CommonName}_ecs_001'
  EcsInstanceGroup2:
    Type: 'ALIYUN::ECS::InstanceGroup'
    Properties:
      ZoneId:
        Ref: Zone2
      VpcId:
        Ref: EcsVpc
      VSwitchId:
        Ref: EcsVSwitch2
      SecurityGroupId:
        Ref: EcsSecurityGroup
      ImageId: centos_7_6
      IoOptimized: optimized
      SystemDiskCategory: cloud_essd
      SystemDiskSize: 40
      SpotStrategy: SpotAsPriceGo
      MaxAmount: 1
      InstanceType:
        Ref: EcsInstanceType2
      Password:
        Ref: InstancePassword
      InstanceName:
        Fn::Sub: '${CommonName}_ecs_002'
  MasterFileSystem:
    Type: ALIYUN::NAS::FileSystem
    Properties:
      StorageType: Capacity
      Description: MasterNAS
      ZoneId:
        Ref: NasZone1
      ProtocolType: NFS
      VpcId:
        Ref: EcsVpc
  BackupFileSystem:
    Type: ALIYUN::NAS::FileSystem
    Properties:
      StorageType: Capacity
      Description: BackupNAS
      ZoneId:
        Ref: NasZone2
      ProtocolType: NFS
      VpcId:
        Ref: EcsVpc
  MasterNasMountTarget:
    Type: ALIYUN::NAS::MountTarget
    Properties:
      VpcId:
        Ref: EcsVpc
      VSwitchId:
        Ref: EcsVSwitch3
      AccessGroupName: DEFAULT_VPC_GROUP_NAME
      FileSystemId:
        Ref: MasterFileSystem
      NetworkType: Vpc
  BackupNasMountTarget:
    Type: ALIYUN::NAS::MountTarget
    Properties:
      VpcId:
        Ref: EcsVpc
      VSwitchId:
        Ref: EcsVSwitch4
      AccessGroupName: DEFAULT_VPC_GROUP_NAME
      FileSystemId:
        Ref: BackupFileSystem
      NetworkType: Vpc
  InstanceRunCommand:
    Type: 'ALIYUN::ECS::RunCommand'
    Properties:
      InstanceIds:
        - Ref: EcsInstanceGroup1
        - Ref: EcsInstanceGroup2
      Sync: true
      Type: RunShellScript
      Timeout: '300'
      CommandContent:
        Fn::Sub: |-
          #!/bin/bash
          if [ ! -f .ros.provision ]; then
            echo "Name: 高可用及共享存储Web服务" > .ros.provision
          fi
          
          name=$(grep "^Name:" .ros.provision | awk -F':' '{print $2}' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
          if [[ "$name" != "高可用及共享存储Web服务" ]]; then
            echo "当前实例已使用过\"$name\"教程的一键配置，不能再使用本教程的一键配置"
            exit 0
          fi
          
          echo "#########################"
          echo "# Check Network"
          echo "#########################"
          ping -c 2 -W 2 aliyun.com > /dev/null
          if [[ $? -ne 0 ]]; then
            echo "当前实例无法访问公网"
            exit 0
          fi
          
          if ! grep -q "^Step1: Prepare Environment$" .ros.provision; then
            echo "#########################"
            echo "# Prepare Environment"
            echo "#########################"
            systemctl status firewalld
            systemctl stop firewalld
            echo "Step1: Prepare Environment" >> .ros.provision
          else
            echo "#########################"
            echo "# Environment has been ready"
            echo "#########################"
          fi
          
          if ! grep -q "^Step2: Install Nginx and deploy service$" .ros.provision; then
            echo "#########################"
            echo "# Install Nginx"
            echo "#########################"
            sudo yum -y install nginx
            sudo wget -O /usr/share/nginx/html/index.html https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/file-manage-files/zh-CN/20231013/jhgg/index.html
            sudo wget -O /usr/share/nginx/html/lipstick.png https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/file-manage-files/zh-CN/20230925/zevs/lipstick.png
            sudo systemctl start nginx
            sudo systemctl enable nginx
            echo "Step2: Install Nginx and deploy service" >> .ros.provision
          else
            echo "#########################"
            echo "# Nginx has been installed"
            echo "#########################"
          fi
          
          if ! grep -q "^Step3: Mount to the ECS" .ros.provision; then
            echo "#########################"
            echo "# Mount to the ECS"
            echo "#########################"
            mkdir /nas_master
            mkdir /nas_backup
            sudo yum install -y nfs-utils
            sudo echo "options sunrpc tcp_slot_table_entries=128" >>  /etc/modprobe.d/sunrpc.conf
            sudo echo "options sunrpc tcp_max_slot_table_entries=128" >>  /etc/modprobe.d/sunrpc.conf
            sudo mount -t nfs -o vers=3,nolock,proto=tcp,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport ${MasterNasMountTarget.MountTargetDomain}:/ /nas_master
            sudo mount -t nfs -o vers=3,nolock,proto=tcp,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport ${BackupNasMountTarget.MountTargetDomain}:/ /nas_backup
            df -h | grep aliyun
          else
            echo "#########################"
            echo "# The ECS has been attached to the Nas"
            echo "#########################"
          fi
          
          if ! grep -q "^Step4: Shared file$" .ros.provision; then
            echo "#########################"
            echo "# Shared file"
            echo "#########################"
            sudo cp -Lvr /usr/share/nginx/html /nas_master
            sudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak
            echo "Step4: Shared file" >> .ros.provision
          else
            echo "#########################"
            echo "# File has been Shared"
            echo "#########################"
          fi
          
          if ! grep -q "^Step5: Install inotify-tools、rsync$" .ros.provision; then
            echo "#########################"
            echo "# Install inotify-tools、rsync"
            echo "#########################"
            sudo yum install -y inotify-tools rsync
            echo "Step6: Install inotify-tools、rsync" >> .ros.provision
          else
            echo "#########################"
            echo "# Inotify-tools has been installed"
            echo "#########################"
          fi
          if ! grep -q "^Step6: Install synchronization server$" .ros.provision; then
            echo "#########################"
            echo "# Install synchronization server"
            echo "#########################"
            sudo wget -P /etc/systemd/system/ https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/file-manage-files/zh-CN/20231017/pftz/sync_nas.sh
            sudo wget -P /etc/systemd/system/ https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/file-manage-files/en-US/20230925/wmaj/sync_check_switch.sh
            sudo chmod +x /etc/systemd/system/sync_nas.sh
            sudo chmod +x /etc/systemd/system/sync_check_switch.sh
            cat > /etc/systemd/system/sync-check-switch.service << \EOF
          [Unit]
          Description=Sync Check Switch
          After=network.target
          
          [Service]
          ExecStart=/etc/systemd/system/sync_check_switch.sh
          RestartSec=3
          Restart=always
          
          [Install]
          WantedBy=default.target
          EOF
          
            cat > /etc/systemd/system/sync-nas.service << \EOF
          [Unit]
          Description=Sync NAS Service
          After=network.target
          
          [Service]
          ExecStart=/etc/systemd/system/sync_nas.sh
          Restart=always
          RestartSec=3
          
          [Install]
          WantedBy=default.target
          EOF
          
            sudo systemctl daemon-reload
            sudo systemctl start sync-nas.service
            sudo systemctl enable sync-check-switch.service
            sudo systemctl start sync-check-switch.service
            sudo systemctl enable sync-nas.service
            echo "Step6: Install " >> .ros.provision
          else
            echo "#########################"
            echo "# Synchronization server has been installed"
            echo "#########################"
          fi
  Slb:
    Type: ALIYUN::SLB::LoadBalancer
    Properties:
      LoadBalancerName:
        Fn::Sub: '${CommonName}-slb'
      PayType: PayOnDemand
      AddressType: internet
      InstanceChargeType: PayByCLCU
  SlbBackendServerAttachment:
    Type: ALIYUN::SLB::BackendServerAttachment
    Properties:
      BackendServerList:
        Fn::ListMerge:
          - Fn::GetAtt:
              - EcsInstanceGroup1
              - InstanceIds
          - Fn::GetAtt:
              - EcsInstanceGroup2
              - InstanceIds
      LoadBalancerId:
        Ref: Slb
      BackendServerWeightList:
        - 100
        - 100
  SlbListener:
    DependsOn:
      - Slb
    Type: ALIYUN::SLB::Listener
    Properties:
      ListenerPort: 80
      Bandwidth: 10
      HealthCheck:
        HttpCode: http_2xx,http_3xx,http_4xx,http_5xx
        HealthCheckType: http
        UnhealthyThreshold: 3
        Timeout: 5
        HealthyThreshold: 3
        Port: 80
        URI: /
        Interval: 2
      LoadBalancerId:
        Ref: Slb
      BackendServerPort: 80
      Protocol: http
Outputs:
  SlbIpAddress:
    Description:
      zh-cn: 对外暴露的公网IP地址
      en: Public IP Addresses
    Value:
      Fn::Sub:
        - http://${ServerAddress}
        - ServerAddress:
            Fn::GetAtt:
              - Slb
              - IpAddress
  ECS1URL:
    Description:
      zh-cn: ECS 1 地址
      en: ECS 1 URL
    Value:
      Fn::Sub:
        - https://ecs.console.aliyun.com/#/server/region/${region}?instanceIds=${InstanceID}
        - InstanceID:
            Fn::Select:
              - '0'
              - Fn::GetAtt:
                  - EcsInstanceGroup1
                  - InstanceIds
          region:
            Ref: ALIYUN::Region
  ECS2URL:
    Description:
      zh-cn: ECS 2 地址
      en: ECS 2 URL
    Value:
      Fn::Sub:
        - https://ecs.console.aliyun.com/#/server/region/${region}?instanceIds=${InstanceID}
        - InstanceID:
            Fn::Select:
              - '0'
              - Fn::GetAtt:
                  - EcsInstanceGroup1
                  - InstanceIds
          region:
            Ref: ALIYUN::Region
  FileSystemId1:
    Description:
      zh-cn: 主NAS
      en: Master NAS
    Value:
      Fn::Sub:
        - https://nasnext.console.aliyun.com/${region}/filesystem/${InstanceID}
        - InstanceID:
            Fn::GetAtt:
              - MasterFileSystem
              - FileSystemId
          region:
            Ref: ALIYUN::Region
  FileSystemId2:
    Description:
      zh-cn: 备NAS
      en: Backup NAS
    Value:
      Fn::Sub:
        - https://nasnext.console.aliyun.com/${region}/filesystem/${InstanceID}
        - InstanceID:
            Fn::GetAtt:
              - BackupFileSystem
              - FileSystemId
          region:
            Ref: ALIYUN::Region
Rules:
  DifferentZones1:
    Assertions:
      - Assert:
          Fn::Not:
            Fn::Equals:
              - Ref: Zone1
              - Ref: Zone2
        AssertDescription: ECS Zones must be different
  DifferentZones2:
    Assertions:
      - Assert:
          Fn::Not:
            Fn::Equals:
              - Ref: NasZone1
              - Ref: NasZone2
        AssertDescription: NAS Zones must be different
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
      - Parameters:
          - Zone1
          - Zone2
          - NasZone1
          - NasZone2
        Label:
          default:
            en: Availability Zone
            zh-cn: 可用区配置
      - Parameters:
          - EcsInstanceType1
          - EcsInstanceType2
          - InstancePassword
        Label:
          default:
            en: Instance Configure
            zh-cn: ECS实例配置
    TemplateTags:
      - 'acs:technical-solution:high-availability-architecture:高可用及共享存储Web服务'
    Hidden:
      - CommonName